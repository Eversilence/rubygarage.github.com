<section id="fatcontroller" class="slide">
  <h2>Let's look at this controller action:</h2>

  <script type="syntaxhighlighter" class="brush: ruby">

    class ChargesController < ApplicationController

      def create
        transaction_result = Stripe::Charge.create(
                              amount:   params[:charge][:ammount]
                              currency: "usd",
                              customer: @customer.id,
                              card:     @card)
        if transaction_result
          redirect_to orders_url, notice: "Your purchase has been successfull"
        else
          redirect_to user_billing_url, notice: "There was a problem with your payment"
      end

      private

      def get_customer
        if current_user.stripe_customer_id.present?
          @customer = Stripe::Customer.retrieve(current_user.stripe_customer_id)
        else
          @customer = Stripe::Customer.create(email: current_user.email)
          current_user.stripe_customer_id = customer.id
          current_user.save
        end
      end

      def get_card
        if @customer.sources.count == 0
          @customer.sources.create(source: @params['charge']['token'])
        else
          @customer.sources.first
        end
      end

    end

  </script>

  <p> Why is it bad? It is 'fat'. Controllers should not contain business logic. </p>
  <p> In fact, Rails promotes pattern "Fat model, skinny controller". </p>

  <p> Let's try to move the logic to a model. </p>

</section>
