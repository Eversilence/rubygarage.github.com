<section id="introduceserviceobject" class="slide">
  <h2>Logic is extracted to ChargesService: </h2>

  <script type="syntaxhighlighter" class="brush: ruby">

    class User < ActiveRecord::Base
      # associations, validations, scopes, etc
    end

    class ChargesService

      def initialize(amount, user, token = nil)
        @user = user
        @amount = amount
        @token = token
      end

      def charge
        @customer = get_customer
        @card     = get_card
        transaction_result = Stripe::Charge.create(
                              amount:   @amount
                              currency: "usd",
                              customer: @customer.id,
                              card:     @card)

        check_for_canceled_subscriptions unless @subscriptions.count == 0
      end

      private

      def get_customer
        if @user.stripe_customer_id.present? && @user.stripe_customer_id != 0
          Stripe::Customer.retrieve(@user.stripe_customer_id)
        else
          customer = Stripe::Customer.create(email: @user.email)
          @user.stripe_customer_id = customer.id
          @user.save
          customer
        end
      end

      def get_card
        if @customer.sources.count == 0
          @customer.sources.create(source: @token)
        else
          @customer.sources.first
        end
      end

  </script>

  <p> This way model only handles associations, validations and query interface. </p>

</section>
